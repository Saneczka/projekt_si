<?php

namespace App\Entity;

use App\Repository\ImageRepository;
use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\Common\Collections\Collection;
use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\HttpFoundation\File\File;
use Symfony\Component\Validator\Constraints as Asserts;
use Symfony\Component\Validator\Constraints as Assert;

/**
 * @ORM\Entity(repositoryClass=ImageRepository::class)
 * @ORM\EntityListeners({"App\EntityListener\ImageListener"})
 * @ORM\HasLifecycleCallbacks()
 */
class Image
{
    /**
     * @ORM\Id
     * @ORM\GeneratedValue
     * @ORM\Column(type="integer")
     */
    private $id;

    /**
     * Auto generated by entity listener
     * @ORM\Column(type="string", length=128, nullable=true)
    */
    private $imagefilename;

    /**
     * @ORM\Column(type="string", length=512, nullable=true)
     */
    private $image_desc;

    /**
     * @ORM\ManyToOne(targetEntity=Album::class)
     * @ORM\JoinColumn(nullable=false)
     */
//    private $album_id;

    /**
     * @ORM\ManyToOne(targetEntity=Album::class, inversedBy="images")
     * @ORM\JoinColumn(nullable=false)
     */
    private $album;

    /**
     * @ORM\OneToMany(targetEntity=Comment::class, mappedBy="image", orphanRemoval=true)
     */
    private $comments;

    /**
     * @ORM\Column(type="string", length=255)
     */
    private $image_title;

    public function __construct()
    {
        $this->comments = new ArrayCollection();
    }

    public function __toString(): string
    {
        return (string) $this->getImageTitle()." ".$this->getImageFileName();
    }

    public function getId(): ?int
    {
        return $this->id;
    }

    public function getImageFileName(): ?string
    {
        return $this->imagefilename;
    }

    public function setImageFileName(?string $filename): self
    {
        $this->imagefilename = $filename;

        return $this;
    }

    public function getImageDesc(): ?string
    {
        return $this->image_desc;
    }

    public function setImageDesc(?string $image_desc): self
    {
        $this->image_desc = $image_desc;

        return $this;
    }

//    public function getAlbumId(): ?Album
//    {
//        return $this->album_id;
//    }

//    public function setAlbumId(?Album $album_id): self
//    {
//        $this->album_id = $album_id;
//
//        return $this;
//    }

    public function getAlbum(): ?Album
    {
        return $this->album;
    }

    public function setAlbum(?Album $album): self
    {
        $this->album = $album;

        return $this;
    }

    /**
     * @return Collection|Comment[]
     */
    public function getComments(): Collection
    {
        return $this->comments;
    }

    public function addComment(Comment $comment): self
    {
        if (!$this->comments->contains($comment)) {
            $this->comments[] = $comment;
            $comment->setImage($this);
        }

        return $this;
    }

    public function removeComment(Comment $comment): self
    {
        if ($this->comments->removeElement($comment)) {
            // set the owning side to null (unless already changed)
            if ($comment->getImage() === $this) {
                $comment->setImage(null);
            }
        }

        return $this;
    }

    public function getImageTitle(): ?string
    {
        return $this->image_title;
    }

    public function setImageTitle(string $image_title): self
    {
        $this->image_title = $image_title;

        return $this;
    }

    public function getPrefixedImageFileName(): ?string
    {
        return 'images/uploads/'.$this->getImageFileName();
    }

}
